{"version":3,"sources":["helpers/LineChartData.js","helpers/BarChartData.js","helpers/PieData.js","helpers/GenderData.js","updateData.js","helpers/dropDownConstants.js","pieChart.js","App.js","drawMap.js","lineChart.js","serviceWorker.js","index.js","covid.png"],"names":["LineChartData","croCases","date","croDeaths","croCured","worldCases","worldDeaths","worldCured","this","BarChartData","value","state","PieData","young","youngMedium","oldMedium","old","GenderData","male","female","updateData","data","lineGraphData","tooltip","margin","width","height","x","d3","range","y","valueline","d","Date","domain","svg","transition","select","duration","attr","call","dot","append","selectAll","remove","div","style","enter","on","number","html","pageX","pageY","options","label","drawPieChart","update","gender","total","keys","radius","Math","min","color","data_ready","pie","innerRadius","outerRadius","key","arcGenerator","text","Number","toFixed","centroid","SVG","i","size","App","lastData","dataByState","covidStatus","covidDataByPerson","selectedOption","covidStatistic","infectedByGender","barChartData","states","statesInfected","statesDeaths","drawBarChart","chart","classed","chartWidth","chartHeight","plot","xScale","map","yScale","myColor","interpolator","bandwidth","xAxis","ticks","scale","yAxis","yGridlines","tickSize","tickFormat","handleChange","setState","updateYearData","updateGenderData","fetch","then","json","PodaciDetaljno","length","push","Zupanija","broj_zarazenih","broj_umrlih","test","props","opacity","projection","center","translate","rotate","path","cro","topojson","objects","layer1","features","id","substring","properties","name","displayData","tip","drawMap","covidCase","SlucajeviHrvatska","Datum","IzlijeceniHrvatska","UmrliHrvatska","SlucajeviSvijet","IzlijeceniSvijet","UmrliSvijet","lineChart","years","todayDate","getFullYear","genderData","dob","spol","Fragment","className","src","covid","alt","item","displayType","thousandSeparator","onChange","onClick","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.b7f5f329.chunk.js","sourcesContent":["export default class LineChartData {\r\n  constructor(\r\n    croCases,\r\n    date,\r\n    croDeaths,\r\n    croCured,\r\n    worldCases,\r\n    worldDeaths,\r\n    worldCured\r\n  ) {\r\n    this.croCases = croCases;\r\n    this.croDeaths = croDeaths;\r\n    this.croCured = croCured;\r\n    this.date = date;\r\n    this.worldCases = worldCases;\r\n    this.worldDeaths = worldDeaths;\r\n    this.worldCured = worldCured;\r\n  }\r\n}\r\n","export default class BarChartData {\r\n  constructor(value, state) {\r\n    this.value = value;\r\n    this.state = state;\r\n  }\r\n}\r\n","export default class PieData {\r\n  constructor(young, youngMedium, oldMedium, old) {\r\n    this.young = young;\r\n    this.youngMedium = youngMedium;\r\n    this.oldMedium = oldMedium;\r\n    this.old = old;\r\n  }\r\n}\r\n","export default class GenderData {\r\n  constructor(male, female) {\r\n    this.male = male;\r\n    this.female = female;\r\n  }\r\n}\r\n","import * as d3 from \"d3\";\r\n\r\nexport const updateData = (data, lineGraphData) => {\r\n  //https://bl.ocks.org/d3noob/7030f35b72de721622b8\r\n  var tooltip = null;\r\n  if (data.value === \"croCases\") {\r\n    tooltip = \"Hrvatska zaraženi: \";\r\n  } else if (data.value === \"croDeaths\") {\r\n    tooltip = \"Hrvatska umrli: \";\r\n  } else if (data.value === \"croCured\") {\r\n    tooltip = \"Hrvatska izliječeni: \";\r\n  } else if (data.value === \"worldCases\") {\r\n    tooltip = \"Svijet zaraženi: \";\r\n  } else if (data.value === \"worldDeaths\") {\r\n    tooltip = \"Svijet umrli: \";\r\n  } else if (data.value === \"worldCured\") {\r\n    tooltip = \"Svijet izliječeni: \";\r\n  }\r\n\r\n  // set the dimensions and margins of the graph\r\n  var margin = { top: 20, right: 20, bottom: 30, left: 100 },\r\n    width = 1100 - margin.left - margin.right,\r\n    height = 500 - margin.top - margin.bottom;\r\n\r\n  // set the ranges\r\n  var x = d3.scaleTime().range([0, width]);\r\n  var y = d3.scaleLinear().range([height, 0]);\r\n\r\n  // define the line\r\n  var valueline = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return x(new Date(d.date));\r\n    })\r\n    .y(function (d) {\r\n      if (data.value === \"croCases\") {\r\n        return y(d.croCases);\r\n      } else if (data.value === \"croDeaths\") {\r\n        return y(d.croDeaths);\r\n      } else if (data.value === \"croCured\") {\r\n        return y(d.croCured);\r\n      } else if (data.value === \"worldCases\") {\r\n        return y(d.worldCases);\r\n      } else if (data.value === \"worldDeaths\") {\r\n        return y(d.worldDeaths);\r\n      } else if (data.value === \"worldCured\") {\r\n        return y(d.worldCured);\r\n      }\r\n    });\r\n  // Scale the range of the data again\r\n  x.domain(\r\n    d3.extent(lineGraphData, function (d) {\r\n      return new Date(d.date);\r\n    })\r\n  );\r\n  y.domain([\r\n    0,\r\n    d3.max(lineGraphData, function (d) {\r\n      if (data.value === \"croCases\") {\r\n        return d.croCases;\r\n      } else if (data.value === \"croDeaths\") {\r\n        return d.croDeaths;\r\n      } else if (data.value === \"croCured\") {\r\n        return d.croCured;\r\n      } else if (data.value === \"worldCases\") {\r\n        return d.worldCases;\r\n      } else if (data.value === \"worldDeaths\") {\r\n        return d.worldDeaths;\r\n      } else if (data.value === \"worldCured\") {\r\n        return d.worldCured;\r\n      }\r\n    }),\r\n  ]);\r\n\r\n  // Select the section we want to apply our changes to\r\n  var svg = d3.select(\"body\").transition();\r\n\r\n  // Make the changes\r\n  svg\r\n    .select(\".line\") // change the line\r\n    .duration(750)\r\n    .attr(\"d\", valueline(lineGraphData));\r\n  svg\r\n    .select(\".xaxis\") // change the x axis\r\n    .duration(750)\r\n    .call(d3.axisBottom(x));\r\n  svg\r\n    .select(\".yaxis\") // change the y axis\r\n    .duration(750)\r\n    .call(d3.axisLeft(y));\r\n\r\n  var dot = d3\r\n    .select(\"body\")\r\n    .select(\".lineChart\")\r\n    .attr(\"width\", width + margin.left + margin.right)\r\n    .attr(\"height\", height + margin.top + margin.bottom)\r\n    .append(\"g\")\r\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n  var body = d3.select(\"body\");\r\n\r\n  body.selectAll(\".dots\").remove();\r\n\r\n  var div = d3\r\n    .select(\"body\")\r\n    .append(\"div\")\r\n    .attr(\"class\", \"tooltip\")\r\n    .style(\"opacity\", 0);\r\n\r\n  div.selectAll(\"div\").remove();\r\n\r\n  // add the dots with tooltips\r\n  var fixeddot = dot\r\n    .selectAll(\"dot\")\r\n    .data(lineGraphData)\r\n    .enter()\r\n    .append(\"circle\")\r\n    .attr(\"r\", 4)\r\n    .attr(\"class\", \"dots\");\r\n\r\n  fixeddot\r\n    .attr(\"cx\", function (d) {\r\n      return x(new Date(d.date));\r\n    })\r\n    .attr(\"cy\", function (d) {\r\n      if (data.value === \"croCases\") {\r\n        return y(d.croCases);\r\n      } else if (data.value === \"croDeaths\") {\r\n        return y(d.croDeaths);\r\n      } else if (data.value === \"croCured\") {\r\n        return y(d.croCured);\r\n      } else if (data.value === \"worldCases\") {\r\n        return y(d.worldCases);\r\n      } else if (data.value === \"worldDeaths\") {\r\n        return y(d.worldDeaths);\r\n      } else if (data.value === \"worldCured\") {\r\n        return y(d.worldCured);\r\n      }\r\n    })\r\n    .on(\"mouseover\", function (d) {\r\n      div.transition().duration(200).style(\"opacity\", 0.9);\r\n      var number = null;\r\n      if (data.value === \"croCases\") {\r\n        number = d.croCases;\r\n      } else if (data.value === \"croDeaths\") {\r\n        number = d.croDeaths;\r\n      } else if (data.value === \"croCured\") {\r\n        number = d.croCured;\r\n      } else if (data.value === \"worldCases\") {\r\n        number = d.worldCases;\r\n      } else if (data.value === \"worldDeaths\") {\r\n        number = d.worldDeaths;\r\n      } else if (data.value === \"worldCured\") {\r\n        number = d.worldCured;\r\n      }\r\n      div\r\n        .html(\"Datum: \" + d.date + \"<br>\" + tooltip + number)\r\n        .style(\"left\", d3.event.pageX - 300 + \"px\")\r\n        .style(\"top\", d3.event.pageY - 75 + \"px\");\r\n    })\r\n    .on(\"mouseout\", function (d) {\r\n      div.transition().duration(500).style(\"opacity\", 0);\r\n    });\r\n};\r\n","export const options = [\r\n  { value: \"croCases\", label: \"Hrvatska zaraženi\" },\r\n  { value: \"croDeaths\", label: \"Hrvatska umrli\" },\r\n  { value: \"croCured\", label: \"Hrvatska izliječeni\" },\r\n  { value: \"worldCases\", label: \"Svijet zaraženi\" },\r\n  { value: \"worldDeaths\", label: \"Svijet umrli\" },\r\n  { value: \"worldCured\", label: \"Svijet izliječeni\" },\r\n];\r\n","import * as d3 from \"d3\";\r\n\r\nexport const drawPieChart = (update, gender, data) => {\r\n  //Za izradu legend https://www.d3-graph-gallery.com/graph/custom_legend.html\r\n  let total = null;\r\n\r\n  if (update === true) {\r\n    d3.select(\".pieChart\").remove();\r\n    d3.select(\".legend\").remove();\r\n\r\n    d3.select(\"#pie\").append(\"svg\").attr(\"class\", \"pieChart\");\r\n    d3.select(\"#legend\")\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"legend\")\r\n      .attr(\"height\", 200);\r\n  }\r\n  // set the dimensions and margins of the graph\r\n  // create a list of keys\r\n  var keys = null;\r\n  if (gender === false) {\r\n    keys = [\"0-18\", \"18-35\", \"35-65\", \"65<\"];\r\n    total = data.old + data.oldMedium + data.young + data.youngMedium;\r\n  } else {\r\n    keys = [\"Muškarci\", \"Žene\"];\r\n    total = data.male + data.female;\r\n  }\r\n  var width = 450;\r\n  var height = 450;\r\n  var margin = 40;\r\n\r\n  // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\r\n  var radius = Math.min(width, height) / 2 - margin;\r\n\r\n  var svg = d3\r\n    .select(\"body\")\r\n    .select(\".pieChart\")\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", height)\r\n    .append(\"g\")\r\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r\n\r\n  // set the color scale\r\n  var color = null;\r\n  if (gender === false) {\r\n    color = d3\r\n      .scaleOrdinal()\r\n      .domain([data])\r\n      .range([\"green\", \"red\", \"orange\", \"brown\"]);\r\n  } else {\r\n    color = d3.scaleOrdinal().domain([data]).range([\"#DC143C\", \"#00BFFF\"]);\r\n  }\r\n\r\n  // Compute the position of each group on the pie:\r\n  var pie = d3.pie().value(function (d) {\r\n    let percentage = (d.value / total) * 100;\r\n    return d.value;\r\n  });\r\n  var data_ready = pie(d3.entries(data));\r\n\r\n  // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\r\n  svg\r\n    .selectAll(\"whatever\")\r\n    .data(data_ready)\r\n    .enter()\r\n    .append(\"path\")\r\n    .attr(\"d\", d3.arc().innerRadius(0).outerRadius(radius))\r\n    .attr(\"fill\", function (d) {\r\n      return color(d.data.key);\r\n    })\r\n    .attr(\"stroke\", \"black\")\r\n    .style(\"stroke-width\", \"2px\")\r\n    .style(\"opacity\", 0.7);\r\n\r\n  var arc = d3.arc().innerRadius(0).outerRadius(radius);\r\n\r\n  // shape helper to build arcs:\r\n  var arcGenerator = d3\r\n    .arc()\r\n    .innerRadius(0)\r\n    .outerRadius(radius + 75);\r\n\r\n  // Now add the annotation. Use the centroid method to get the best coordinates\r\n  svg\r\n    .selectAll(\"mySlices\")\r\n    .data(data_ready)\r\n    .enter()\r\n    .append(\"text\")\r\n    .text(function (d) {\r\n      return Number((d.value / total) * 100).toFixed(2) + \" %\";\r\n    })\r\n    .attr(\"transform\", function (d) {\r\n      return \"translate(\" + arcGenerator.centroid(d) + \")\";\r\n    })\r\n    .style(\"text-anchor\", \"middle\")\r\n    .style(\"font-size\", 25);\r\n\r\n  // select the svg area\r\n  var SVG = d3.select(\".legend\");\r\n\r\n  // Add one dot in the legend for each name.\r\n  var size = 20;\r\n  SVG.selectAll(\"mydots\")\r\n    .data(keys)\r\n    .enter()\r\n    .append(\"rect\")\r\n    .attr(\"x\", 100)\r\n    .attr(\"y\", function (d, i) {\r\n      return 100 + i * (size + 5);\r\n    }) // 100 is where the first dot appears. 25 is the distance between dots\r\n    .attr(\"width\", size)\r\n    .attr(\"height\", size)\r\n    .attr(\"class\", \"rec\")\r\n    .style(\"fill\", function (d) {\r\n      return color(d);\r\n    });\r\n\r\n  // Add one dot in the legend for each name.\r\n  SVG.selectAll(\"mylabels\")\r\n    .data(keys)\r\n    .enter()\r\n    .append(\"text\")\r\n    .attr(\"x\", 100 + size * 1.2)\r\n    .attr(\"y\", function (d, i) {\r\n      return 100 + i * (size + 5) + size / 2;\r\n    }) // 100 is where the first dot appears. 25 is the distance between dots\r\n    .style(\"fill\", function (d) {\r\n      return color(d);\r\n    })\r\n    .text(function (d) {\r\n      return d;\r\n    })\r\n    .attr(\"class\", \"tex\")\r\n    .attr(\"text-anchor\", \"left\")\r\n    .style(\"alignment-baseline\", \"middle\");\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { drawMap } from \"./drawMap\";\nimport Select from \"react-select\";\nimport LineChartData from \"./helpers/LineChartData\";\nimport BarChartData from \"./helpers/BarChartData\";\nimport PieData from \"./helpers/PieData\";\nimport GenderData from \"./helpers/GenderData\";\nimport { lineChart } from \"./lineChart\";\nimport { updateData } from \"./updateData\";\nimport { options } from \"./helpers/dropDownConstants\";\nimport covid from \"./covid.png\";\nimport { drawPieChart } from \"./pieChart\";\nimport * as d3 from \"d3\";\nimport NumberFormat from \"react-number-format\";\n\nclass App extends React.Component {\n  state = {\n    lastData: null,\n    dataByState: [],\n    covidStatus: [],\n    lineGraphData: [],\n    covidDataByPerson: [],\n    selectedOption: null,\n    covidStatistic: {},\n    infectedByGender: [],\n    gender: false,\n    update: false,\n    barChartData: [],\n    states: [],\n    statesInfected: [],\n    statesDeaths: [],\n  };\n\n  componentDidMount() {\n    fetch(\n      \"https://cors-anywhere.herokuapp.com/https://www.koronavirus.hr/json/?action=podaci_zadnji\"\n    )\n      .then((data) => {\n        return data.json();\n      })\n      .then((data) => {\n        this.setState({ lastData: data });\n      });\n\n    fetch(\n      \"https://cors-anywhere.herokuapp.com/https://www.koronavirus.hr/json/?action=po_danima_zupanijama_zadnji\"\n    )\n      .then((data) => {\n        return data.json();\n      })\n      .then((data) => {\n        for (let i = 0; i < data[0].PodaciDetaljno.length; i++) {\n          this.state.dataByState.push(data[0].PodaciDetaljno[i]);\n          this.state.states.push(data[0].PodaciDetaljno[i].Zupanija);\n          this.state.statesInfected.push(\n            data[0].PodaciDetaljno[i].broj_zarazenih\n          );\n          this.state.statesDeaths.push(data[0].PodaciDetaljno[i].broj_umrlih);\n          var test = new BarChartData(\n            data[0].PodaciDetaljno[i].broj_zarazenih,\n            data[0].PodaciDetaljno[i].Zupanija\n          );\n          this.state.barChartData.push(test);\n        }\n        drawMap(this.state.dataByState);\n        this.drawBarChart();\n      });\n\n    fetch(\n      \"https://cors-anywhere.herokuapp.com/https://www.koronavirus.hr/json/?action=podaci\"\n    )\n      .then((data) => {\n        return data.json();\n      })\n      .then((data) => {\n        this.setState({ covidStatus: data });\n        for (let i = 0; i < this.state.covidStatus.length; i++) {\n          let covidCase = new LineChartData();\n\n          covidCase.croCases = this.state.covidStatus[i].SlucajeviHrvatska;\n          covidCase.date = this.state.covidStatus[i].Datum;\n          covidCase.croCured = this.state.covidStatus[i].IzlijeceniHrvatska;\n          covidCase.croDeaths = this.state.covidStatus[i].UmrliHrvatska;\n\n          covidCase.worldCases = this.state.covidStatus[i].SlucajeviSvijet;\n          covidCase.worldCured = this.state.covidStatus[i].IzlijeceniSvijet;\n          covidCase.worldDeaths = this.state.covidStatus[i].UmrliSvijet;\n          this.state.lineGraphData.push(covidCase);\n        }\n        this.setState({ selectedOption: options[0] });\n        lineChart(this.state.selectedOption, this.state.lineGraphData);\n      });\n\n    fetch(\n      \"https://cors-anywhere.herokuapp.com/https://www.koronavirus.hr/json/?action=po_osobama\"\n    )\n      .then((data) => {\n        return data.json();\n      })\n      .then((data) => {\n        this.setState({ covidDataByPerson: data });\n        const todayDate = new Date().getFullYear();\n        let covidCase = new PieData();\n        let genderData = new GenderData();\n\n        let male = 0;\n        let female = 0;\n        let years;\n        let young = 0;\n        let oldMedium = 0;\n        let youngMedium = 0;\n        let old = 0;\n        for (let i = 0; i < this.state.covidDataByPerson.length; i++) {\n          years = todayDate - this.state.covidDataByPerson[i].dob;\n          if (years >= 0 && years <= 18) {\n            young++;\n          } else if (years > 18 && years <= 35) {\n            youngMedium++;\n          } else if (years > 35 && years <= 65) {\n            oldMedium++;\n          } else {\n            old++;\n          }\n\n          if (this.state.covidDataByPerson[i].spol === \"M\") {\n            male++;\n          } else {\n            female++;\n          }\n        }\n        genderData.male = male;\n        genderData.female = female;\n        this.setState({ infectedByGender: genderData });\n        covidCase.young = young;\n        covidCase.youngMedium = youngMedium;\n        covidCase.oldMedium = oldMedium;\n        covidCase.old = old;\n        this.setState({ covidStatistic: covidCase });\n        drawPieChart(false, false, this.state.covidStatistic);\n      });\n\n    fetch(\n      \"https://cors-anywhere.herokuapp.com/https://json/?action=po_danima_zupanijama\"\n    )\n      .then((data) => {\n        return data.json();\n      })\n      .then((data) => {});\n  }\n\n  drawBarChart = () => {\n    //https://vijayt.com/post/plotting-bar-chart-d3-react/\n    const width = 1100;\n    const height = 500;\n\n    const svg = d3\n      .select(\"body\")\n      .select(\".barChart\")\n      .attr(\"id\", \"chart\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    const margin = {\n      top: 60,\n      bottom: 210,\n      left: 80,\n      right: 40,\n    };\n\n    const chart = svg\n      .append(\"g\")\n      .classed(\"display\", true)\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    const chartWidth = width - margin.left - margin.right;\n    const chartHeight = height - margin.top - margin.bottom;\n\n    this.plot(chart, chartWidth, chartHeight);\n  };\n\n  plot = (chart, chartWidth, chartHeight) => {\n    const width = chartWidth;\n    const height = chartHeight;\n\n    const xScale = d3\n      .scaleBand()\n      .domain(this.state.barChartData.map((d) => d.state))\n      .range([0, width]);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(this.state.barChartData, (d) => d.value)])\n      .range([height, 0]);\n\n    var myColor = d3\n      .scaleSequential()\n      .domain([1, 24])\n      .interpolator(d3.interpolateViridis);\n\n    chart\n      .selectAll(\".bar\")\n      .data(this.state.barChartData)\n      .enter()\n      .append(\"rect\")\n      .classed(\"bar\", true)\n      .attr(\"x\", (d) => xScale(d.state))\n      .attr(\"y\", (d) => yScale(d.value))\n      .attr(\"height\", (d) => height - yScale(d.value))\n      .attr(\"width\", (d) => xScale.bandwidth())\n      .style(\"fill\", (d, i) => myColor(i));\n\n    chart\n      .selectAll(\".barLabel\")\n      .data(this.state.barChartData)\n      .enter()\n      .append(\"text\")\n      .classed(\"barLabel\", true)\n      .style(\"fill\", \"white\")\n      .attr(\"x\", (d) => xScale(d.state) + xScale.bandwidth() / 2)\n      .attr(\"dx\", -10)\n      .attr(\"y\", (d) => yScale(d.value))\n      .attr(\"dy\", -6)\n      .text((d) => d.value);\n\n    const xAxis = d3.axisBottom().ticks(25).scale(xScale);\n\n    chart\n      .append(\"g\")\n      .attr(\"class\", \"xAxis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n      .selectAll(\"text\")\n      .style(\"text-anchor\", \"end\")\n      .style(\"font-size\", \"14px\")\n      .attr(\"dx\", \"-.8em\")\n      .attr(\"dy\", \".15em\")\n      .attr(\"transform\", function (d) {\n        return \"rotate(-65)\";\n      });\n\n    const yAxis = d3.axisLeft().ticks(5).scale(yScale);\n\n    chart\n      .append(\"g\")\n      .classed(\"yAxis\", true)\n      .attr(\"transform\", \"translate(0,0)\")\n      .call(yAxis);\n\n    chart\n      .select(\".yAxis\")\n      .append(\"text\")\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"transform\", `translate(-50, ${height / 2}) rotate(-90)`)\n      .attr(\"fill\", \"white\")\n      .style(\"font-size\", \"14px\")\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Broj zaraženih\");\n\n    const yGridlines = d3\n      .axisLeft()\n      .scale(yScale)\n      .ticks(5)\n      .tickSize(-width, 0, 0)\n      .tickFormat(\"\");\n\n    chart.append(\"g\").call(yGridlines).classed(\"gridline\", true);\n  };\n\n  handleChange = (selectedOption) => {\n    this.setState({ selectedOption });\n    updateData(selectedOption, this.state.lineGraphData);\n  };\n\n  updateYearData = () => {\n    this.setState({ gender: false });\n    this.setState({ update: true });\n    drawPieChart(true, false, this.state.covidStatistic);\n  };\n\n  updateGenderData = () => {\n    this.setState({ gender: true });\n    this.setState({ update: true });\n    drawPieChart(true, true, this.state.infectedByGender);\n  };\n\n  render() {\n    const { selectedOption } = this.state;\n    return (\n      <React.Fragment>\n        <img className=\"logo\" src={covid} alt=\"Logo\" />\n        <h1>Covid-19</h1>\n        {this.state.lastData !== null\n          ? this.state.lastData.map((item) => (\n              <React.Fragment>\n                <h4 key={item.Datum}>Ažurirano: {item.Datum}</h4>\n                <table>\n                  <tbody className=\"tableBody\">\n                    <tr>\n                      <td>\n                        Zaraženi u Hrvatskoj:{\" \"}\n                        <NumberFormat\n                          value={item.SlucajeviHrvatska}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </td>\n                      <td>\n                        Umrli u Hrvatskoj:{\" \"}\n                        <NumberFormat\n                          value={item.UmrliHrvatska}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </td>\n                      <td>\n                        Izliječeni u Hrvatskoj:{\" \"}\n                        <NumberFormat\n                          value={item.IzlijeceniHrvatska}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        Zaraženi u svijetu:{\" \"}\n                        <NumberFormat\n                          value={item.SlucajeviSvijet}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </td>\n                      <td>\n                        Umrli u svijetu:{\" \"}\n                        <NumberFormat\n                          value={item.UmrliSvijet}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />\n                      </td>\n                      <td>\n                        Izliječeni u svijetu:{\" \"}\n                        <NumberFormat\n                          value={item.IzlijeceniSvijet}\n                          displayType={\"text\"}\n                          thousandSeparator={true}\n                        />{\" \"}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </React.Fragment>\n            ))\n          : \"No data\"}\n        <svg className=\"map\"></svg>\n        <br />\n        <svg className=\"barChart\"></svg>\n        <br />\n        <div className=\"chartDiv\">\n          <div className=\"select\">\n            <Select\n              value={selectedOption}\n              onChange={this.handleChange}\n              options={options}\n            />\n          </div>\n          <svg className=\"lineChart\"></svg>\n        </div>\n        <br />\n        <div className=\"chartDiv\">\n          <h2>Zaraženi-statistika:</h2>\n          <button className=\"button1\" onClick={this.updateYearData}>\n            Godine\n          </button>\n          <button className=\"button2\" onClick={this.updateGenderData}>\n            Spol\n          </button>\n          <br />\n          <div className=\"row\">\n            <div className=\"column\" id=\"pie\">\n              <svg className=\"pieChart\"></svg>\n            </div>\n            <div className=\"column\" id=\"legend\">\n              <svg className=\"legend\" height={300} width={450}></svg>\n            </div>\n          </div>\n        </div>\n        <br />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import * as d3 from \"d3\";\r\nimport * as topojson from \"topojson-client\";\r\n\r\nexport const drawMap = (props) => {\r\n  //Za iscrtavanje mape korišten je priričnik za LV  i\r\n  //https://mono.software/2017/08/10/d3-js-map-of-croatia/\r\n  var opacity = d3.scaleLinear().domain([0, 700]).range([0.4, 1]);\r\n  var width = 960;\r\n  var height = 700;\r\n\r\n  var projection = d3\r\n    .geoMercator()\r\n    .center([0, 10])\r\n    .scale(6000)\r\n    .translate([17600, 4500])\r\n    .rotate([-180, 0]);\r\n\r\n  var path = d3.geoPath().projection(projection);\r\n\r\n  var svg = d3\r\n    .select(\"body\")\r\n    .select(\".map\")\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", height)\r\n    .style(\"background\", \"#3b3434\");\r\n\r\n  d3.json(\"cro_regv3.json\").then(function (cro) {\r\n    var data = topojson.feature(cro, cro.objects.layer1);\r\n\r\n    svg\r\n      .selectAll(\"path.county\")\r\n      .data(data.features)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"class\", \"county\")\r\n      .attr(\"id\", function (d) {\r\n        return d.id;\r\n      })\r\n      .attr(\"d\", path)\r\n      .style(\"fill-opacity\", function (d) {\r\n        for (let i = 0; i < props.length; i++) {\r\n          if (\r\n            props[i].Zupanija.substring(0, 2) ===\r\n            d.properties.name.substring(0, 2)\r\n          ) {\r\n            return opacity(props[i].broj_zarazenih);\r\n          }\r\n        }\r\n      })\r\n      .style(\"fill\", \"red\")\r\n      .style(\"stroke\", \"gray\")\r\n      .style(\"stroke-width\", 1)\r\n      .style(\"stroke-opacity\", 1)\r\n      .on(\"mouseover\", function (d) {\r\n        let displayData;\r\n        for (let i = 0; i < props.length; i++) {\r\n          if (\r\n            props[i].Zupanija.substring(0, 2) ===\r\n            d.properties.name.substring(0, 2)\r\n          ) {\r\n            displayData = props[i];\r\n          }\r\n        }\r\n        var tip =\r\n          \"<h3>\" +\r\n          d.properties.name +\r\n          \"</h3>\" +\r\n          \"<br>\" +\r\n          \"Broj zaraženih: \" +\r\n          displayData.broj_zarazenih +\r\n          \"<br>\" +\r\n          \"Broj umrlih: \" +\r\n          displayData.broj_umrlih;\r\n        tooltip\r\n          .html(tip)\r\n          .style(\"left\", d3.event.pageX + \"px\")\r\n          .style(\"top\", d3.event.pageY + \"px\");\r\n\r\n        tooltip.transition().duration(500).style(\"opacity\", 0.7);\r\n      })\r\n      .on(\"mouseout\", function (d) {\r\n        tooltip.transition().duration(500).style(\"opacity\", 0);\r\n      });\r\n  });\r\n\r\n  var tooltip = d3\r\n    .select(\"body\")\r\n    .append(\"div\")\r\n    .attr(\"class\", \"tooltipMap\")\r\n    .style(\"opacity\", 0)\r\n    .style(\"width\", 600);\r\n};\r\n","import * as d3 from \"d3\";\r\n\r\nexport const lineChart = (data, lineGraphData) => {\r\n  //Korištena literatura https://bl.ocks.org/d3noob/402dd382a51a4f6eea487f9a35566de0\r\n  //https://bl.ocks.org/gordlea/27370d1eea8464b04538e6d8ced39e89\r\n  var tooltip = null;\r\n  if (data.value === \"croCases\") {\r\n    tooltip = \"Hrvatska zaraženi: \";\r\n  } else if (data.value === \"croDeaths\") {\r\n    tooltip = \"Hrvatska umrli: \";\r\n  } else if (data.value === \"croCured\") {\r\n    tooltip = \"Hrvatska izliječeni: \";\r\n  } else if (data.value === \"worldCases\") {\r\n    tooltip = \"Svijet zaraženi: \";\r\n  } else if (data.value === \"worldDeaths\") {\r\n    tooltip = \"Svijet umrli: \";\r\n  } else if (data.value === \"worldCured\") {\r\n    tooltip = \"Svijet izliječeni: \";\r\n  }\r\n\r\n  // set the dimensions and margins of the graph\r\n  var margin = { top: 20, right: 20, bottom: 30, left: 100 },\r\n    width = 1100 - margin.left - margin.right,\r\n    height = 500 - margin.top - margin.bottom;\r\n\r\n  // set the ranges\r\n  var x = d3.scaleTime().range([0, width]);\r\n  var y = d3.scaleLinear().range([height, 0]);\r\n\r\n  // define the line\r\n  var valueline = d3\r\n    .line()\r\n    .x(function (d) {\r\n      return x(new Date(d.date));\r\n    })\r\n    .y(function (d) {\r\n      if (data.value === \"croCases\") {\r\n        return y(d.croCases);\r\n      } else if (data.value === \"croDeaths\") {\r\n        return y(d.croDeaths);\r\n      } else if (data.value === \"croCured\") {\r\n        return y(d.croCured);\r\n      } else if (data.value === \"worldCases\") {\r\n        return y(d.worldCases);\r\n      } else if (data.value === \"worldDeaths\") {\r\n        return y(d.worldDeaths);\r\n      } else if (data.value === \"worldCured\") {\r\n        return y(d.worldCured);\r\n      }\r\n    });\r\n\r\n  // append the svg obgect to the body of the page\r\n  // appends a 'group' element to 'svg'\r\n  // moves the 'group' element to the top left margin\r\n  var svg = d3\r\n    .select(\"body\")\r\n    .select(\".lineChart\")\r\n    .attr(\"width\", width + margin.left + margin.right)\r\n    .attr(\"height\", height + margin.top + margin.bottom)\r\n    .append(\"g\")\r\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n  // Scale the range of the data\r\n  x.domain(\r\n    d3.extent(lineGraphData, function (d) {\r\n      return new Date(d.date);\r\n    })\r\n  );\r\n  y.domain([\r\n    0,\r\n    d3.max(lineGraphData, function (d) {\r\n      if (data.value === \"croCases\") {\r\n        return d.croCases;\r\n      } else if (data.value === \"croDeaths\") {\r\n        return d.croDeaths;\r\n      } else if (data.value === \"croCured\") {\r\n        return d.croCured;\r\n      } else if (data.value === \"worldCases\") {\r\n        return d.worldCases;\r\n      } else if (data.value === \"worldDeaths\") {\r\n        return d.worldDeaths;\r\n      } else if (data.value === \"worldCured\") {\r\n        return d.worldCured;\r\n      }\r\n    }),\r\n  ]);\r\n  // Add the valueline path.\r\n  svg\r\n    .append(\"path\")\r\n    .data([lineGraphData])\r\n    .attr(\"class\", \"line\")\r\n    .attr(\"d\", valueline);\r\n\r\n  var div = d3\r\n    .select(\"body\")\r\n    .append(\"div\")\r\n    .attr(\"class\", \"tooltip\")\r\n    .style(\"opacity\", 0);\r\n\r\n  // add the dots with tooltips\r\n  var fixeddot = svg\r\n    .selectAll(\"dot\")\r\n    .data(lineGraphData)\r\n    .enter()\r\n    .append(\"circle\")\r\n    .attr(\"r\", 4)\r\n    .attr(\"class\", \"dots\");\r\n\r\n  fixeddot\r\n    .attr(\"cx\", function (d) {\r\n      return x(new Date(d.date));\r\n    })\r\n    .attr(\"cy\", function (d) {\r\n      return y(d.croCases);\r\n    })\r\n    .on(\"mouseover\", function (d) {\r\n      div.transition().duration(200).style(\"opacity\", 0.9);\r\n      div\r\n        .html(\"Datum: \" + d.date + \"<br>Cro cases: \" + d.croCases)\r\n        .style(\"left\", d3.event.pageX - 300 + \"px\")\r\n        .style(\"top\", d3.event.pageY - 75 + \"px\");\r\n    })\r\n    .on(\"mouseout\", function (d) {\r\n      div.transition().duration(200).style(\"opacity\", 0);\r\n    });\r\n\r\n  // Add the X Axis\r\n  svg\r\n    .append(\"g\")\r\n    .attr(\"class\", \"xaxis\")\r\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n    .call(d3.axisBottom(x));\r\n\r\n  // Add the Y Axis\r\n  svg.append(\"g\").attr(\"class\", \"yaxis\").call(d3.axisLeft(y));\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/covid.354d7b40.png\";"],"sourceRoot":""}